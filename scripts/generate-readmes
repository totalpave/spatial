#!/usr/bin/env node

const fs = require('fs-extra');
const glob = require('glob');
const path = require('path');
const load = require('load-json-file');
const documentation = require('documentation');
const yaml = require('yamljs');

/**
 * When firing `npm run docs`:
 *   - inside a module, only the docs of that module will be generated
 *   - outside or at the root level it will generate docs for all modules
 */
const currentFolder = process.cwd().split(path.sep).pop();
const packages = currentFolder.includes('turf-') ?
    [path.join(process.cwd(), 'package.json')] :
    glob.sync(path.join(__dirname, '..', 'packages', 'turf-*', 'package.json'));

// Template for README Markdown
const postfix = fs.readFileSync(path.join(__dirname, 'postfix.md'), 'utf8');

const paths = yaml.parse(fs.readFileSync(path.join(__dirname, '..', 'documentation.yml'), 'utf8')).paths;

packages.forEach(packagePath => {
    const directory = path.parse(packagePath).dir;
    const indexPath = path.join(directory, 'index.js');
    const pckg = load.sync(packagePath);
    const name = pckg.name;

    // Build Documentation
    documentation.build(indexPath, {shallow: true}).then(res => {
        if (res === undefined) return console.warning(packagePath);
        console.log('Building Docs: ' + name);

        // Format Markdown
        documentation.formats.md(res, {paths}).then(markdown => {
            markdown = `# ${name}\n\n${markdown}${postfix.replace(/{module}/, name)}`;
            fs.writeFileSync(path.join(directory, 'README.md'), markdown);
        }).catch(error => console.warning(error));
    }).catch(error => console.warning(error));
});
